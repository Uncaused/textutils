{"version":3,"sources":["components/NavBar.js","components/TextForm.js","components/About.js","App.js","index.js"],"names":["NavBar","props","className","mode","to","title","type","id","aboutText","onClick","toggleMode","htmlFor","TextForm","React","text","setText","words","split","filter","n","heading","value","onChange","event","target","rows","style","backgroundColor","color","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newText","join","CapitalizedWords","forEach","element","push","slice","length","defaultProps","About","myStyle","border","App","useState","setMode","body","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9633c816.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function NavBar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">\r\n                        {props.title}\r\n                    </Link>\r\n                    <button\r\n                        className=\"navbar-toggler\"\r\n                        type=\"button\"\r\n                        data-bs-toggle=\"collapse\"\r\n                        data-bs-target=\"#navbarSupportedContent\"\r\n                        aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\"\r\n                        aria-label=\"Toggle navigation\"\r\n                    >\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                                    Home\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link\" to=\"/about\">\r\n                                    {props.aboutText}\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                        <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Toggle dark mode</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nNavBar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string,\r\n};\r\n\r\nNavBar.defaultProps = {\r\n    aboutText: \"About Us\"\r\n}","import * as React from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    setText(text.toUpperCase());\r\n  };\r\n  const handleLowClick = () => {\r\n    setText(text.toLowerCase());\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  function clearText() {\r\n    setText(\"\")\r\n  }\r\n\r\n  function handleCopy() {\r\n    const text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n  }\r\n\r\n  function handleExtraSpaces() {\r\n    let newText = text.split(/[  ]+/);\r\n    setText(newText.join(\" \"))\r\n  }\r\n\r\n  function firstLetterUp() {\r\n    var words = text.split(' ');\r\n    var CapitalizedWords = [];\r\n    words.forEach(element => {\r\n      CapitalizedWords.push(element[0].toUpperCase() + element.slice(1, element.length));\r\n    });\r\n    setText(CapitalizedWords.join(' '))\r\n  }\r\n\r\n  const [text, setText] = React.useState(\"\");\r\n  let words = text.split(' ').filter((n) => { return n !== '' });\r\n  // if (text.length === 0) words = [];\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            style={{ backgroundColor: props.mode === 'light' ? 'white' : '#195d61', color: props.mode === 'dark' ? 'white' : 'black' }}\r\n          ></textarea>\r\n        </div>\r\n        <div id=\"buttons\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success mx-2 my-2\"\r\n            onClick={handleUpClick}\r\n          >\r\n            Convert Text To UpperCase\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary mx-2 my-2\"\r\n            onClick={handleLowClick}\r\n          >\r\n            Convert Text To LowerCase\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary mx-2 my-2\"\r\n            onClick={clearText}\r\n          >\r\n            Clear Text\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-danger mx-2 my-2\"\r\n            onClick={handleCopy}\r\n          >\r\n            Copy Text\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-warning mx-2 my-2\"\r\n            onClick={handleExtraSpaces}\r\n          >\r\n            Remove extra spaces\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-info mx-2 my-2\"\r\n            onClick={firstLetterUp}\r\n          >\r\n            Make the first word to UpperCase\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container my-4\" id=\"preview-waala\">\r\n        <h2>Your text summary</h2>\r\n        <p>\r\n          <b>{words.length} words</b> and <b>{text.length} charecters</b>\r\n        </p>\r\n        <p>\r\n          Takes <b>{0.008 * words.length * 60} seconds</b> for an average reader\r\n          to read this text\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n    let myStyle;\r\n    if (props.mode === \"dark\") {\r\n        myStyle = {\r\n            color: \"white\",\r\n            backgroundColor: \"grey\",\r\n            border: '1px solid white'\r\n        }\r\n    } else {\r\n        myStyle = {\r\n            color: \"black\",\r\n            backgroundColor: \"white\"\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={myStyle}>\r\n                <h1 className=\"my-3\">About Us</h1>\r\n                <div className=\"accordion my-1\" id=\"accordionExample\" style={myStyle}>\r\n                    <div className=\"accordion-item\">\r\n                        <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                            <button\r\n                                className=\"accordion-button\"\r\n                                type=\"button\"\r\n                                data-bs-toggle=\"collapse\"\r\n                                data-bs-target=\"#collapseOne\"\r\n                                aria-expanded=\"true\"\r\n                                aria-controls=\"collapseOne\"\r\n                                style={myStyle}\r\n                            >\r\n                                About TextUtils\r\n                            </button>\r\n                        </h2>\r\n                        <div\r\n                            id=\"collapseOne\"\r\n                            className=\"accordion-collapse collapse show\"\r\n                            aria-labelledby=\"headingOne\"\r\n                            data-bs-parent=\"#accordionExample\"\r\n                            style={myStyle}\r\n                        >\r\n                            <div className=\"accordion-body\" style={myStyle}>\r\n                                TextUtils is a text based utility to modify your text in the way you want!\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}","import NavBar from \"./components/NavBar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  \n} from \"react-router-dom\";\nimport About from './components/About';\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // normally app is light mode\n  function changeMode() {\n    if (mode === 'dark') {\n      setMode('light')\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n    } else {\n      setMode('dark')\n      document.body.style.backgroundColor = \"teal\";\n      document.body.style.color = \"white\";\n    }\n  }\n\n  return (\n    <>\n      <Router>\n        <NavBar title=\"TextUtils\" mode={mode} toggleMode={changeMode} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route path=\"/about\">\n              <About mode={mode} />\n            </Route>\n            <Route path=\"/\">\n              <TextForm heading=\"Enter Your text below!\" mode={mode} />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}