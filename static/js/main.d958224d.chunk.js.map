{"version":3,"sources":["components/NavBar.js","components/TextForm.js","components/About.js","App.js","index.js"],"names":["NavBar","props","className","mode","to","title","type","id","aboutText","onClick","toggleMode","htmlFor","TextForm","React","useState","text","setText","heading","value","onChange","event","target","rows","style","backgroundColor","color","disabled","length","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","newText","split","join","words","CapitalizedWords","forEach","element","push","slice","filter","defaultProps","About","myStyle","App","setMode","body","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d958224d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function NavBar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/textutils\">\r\n                        {props.title}\r\n                    </Link>\r\n                    <button\r\n                        className=\"navbar-toggler\"\r\n                        type=\"button\"\r\n                        data-bs-toggle=\"collapse\"\r\n                        data-bs-target=\"#navbarSupportedContent\"\r\n                        aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\"\r\n                        aria-label=\"Toggle navigation\"\r\n                    >\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/textutils\">\r\n                                    Home\r\n                                </Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" to=\"/textutils/about\">\r\n                                    {props.aboutText}\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                        <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Toggle dark mode</label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    );\r\n}\r\n\r\nNavBar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string,\r\n};\r\n\r\nNavBar.defaultProps = {\r\n    aboutText: \"About Us\"\r\n}","import React from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    setText(text.toUpperCase());\r\n  };\r\n  const handleLowClick = () => {\r\n    setText(text.toLowerCase());\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  function clearText() {\r\n    setText(\"\");\r\n  }\r\n\r\n  function handleCopy() {\r\n    const text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n  }\r\n\r\n  function handleExtraSpaces() {\r\n    let newText = text.split(/[  ]+/);\r\n    setText(newText.join(\" \"));\r\n  }\r\n\r\n  function firstLetterUp() {\r\n    var words = text.split(\" \");\r\n    var CapitalizedWords = [];\r\n    words.forEach((element) => {\r\n      CapitalizedWords.push(\r\n        element[0].toUpperCase() + element.slice(1, element.length)\r\n      );\r\n    });\r\n    setText(CapitalizedWords.join(\" \"));\r\n  }\r\n\r\n  const [text, setText] = React.useState(\"\");\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n            style={{\r\n              backgroundColor: props.mode === \"light\" ? \"white\" : \"#242738\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <div id=\"buttons\">\r\n          <button\r\n            disabled={text.length === 0}\r\n            type=\"button\"\r\n            className=\"btn btn-success mx-2 my-2\"\r\n            onClick={handleUpClick}\r\n          >\r\n            Convert Text To UpperCase\r\n          </button>\r\n          <button\r\n            disabled={text.length === 0}\r\n            type=\"button\"\r\n            className=\"btn btn-primary mx-2 my-2\"\r\n            onClick={handleLowClick}\r\n          >\r\n            Convert Text To LowerCase\r\n          </button>\r\n          <button\r\n            disabled={text.length === 0}\r\n            type=\"button\"\r\n            className=\"btn btn-secondary mx-2 my-2\"\r\n            onClick={clearText}\r\n          >\r\n            Clear Text\r\n          </button>\r\n          <button\r\n            disabled={text.length === 0}\r\n            type=\"button\"\r\n            className=\"btn btn-danger mx-2 my-2\"\r\n            onClick={handleCopy}\r\n          >\r\n            Copy Text\r\n          </button>\r\n          <button\r\n            disabled={text.length === 0}\r\n            type=\"button\"\r\n            className=\"btn btn-warning mx-2 my-2\"\r\n            onClick={handleExtraSpaces}\r\n          >\r\n            Remove extra spaces\r\n          </button>\r\n          <button\r\n            disabled={text.length === 0}\r\n            type=\"button\"\r\n            className=\"btn btn-info mx-2 my-2\"\r\n            onClick={firstLetterUp}\r\n          >\r\n            Make the first letter of words to UpperCase\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container my-4\" id=\"preview-waala\">\r\n        <h2>Your text summary</h2>\r\n        <p>\r\n          <b>\r\n            {\r\n              text.split(/\\s+/).filter((element) => {\r\n                return element.length !== 0;\r\n              }).length\r\n            }{\" \"}\r\n            words\r\n          </b>{\" \"}\r\n          and <b>{text.length} characters</b>\r\n        </p>\r\n        <p>\r\n          Takes{\" \"}\r\n          <b>\r\n            {0.008 *\r\n              text.split(/\\s+/).filter((element) => {\r\n                return element.length !== 0;\r\n              }).length *\r\n              60}{\" \"}\r\n            seconds\r\n          </b>{\" \"}\r\n          for an average reader to read this text\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n  let myStyle = {\r\n    color: props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n    backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1\r\n        className=\"my-3\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"#042743\" }}\r\n      >\r\n        About Us\r\n      </h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              type=\"button\"\r\n              style={myStyle}\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n              <strong>Analyze Your text </strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              Textutils gives you a way to analyze your text quickly and\r\n              efficiently. Be it word count, character count or\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              style={myStyle}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n            >\r\n              <strong>Free to use </strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              TextUtils is a free character counter tool that provides instant\r\n              character count & word count statistics for a given text.\r\n              TextUtils reports the number of words and characters. Thus it is\r\n              suitable for writing text with word/ character limit.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              style={myStyle}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n            >\r\n              <strong>Browser Compatible </strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              This word counter software works in any web browsers such as\r\n              Chrome, Firefox, Internet Explorer, Safari, Opera. It suits to\r\n              count characters in facebook, blog, books, excel document, pdf\r\n              document, essays, etc.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import NavBar from \"./components/NavBar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport About from \"./components/About\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // normally app is light mode\n  function changeMode() {\n    if (mode === \"dark\") {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      document.body.style.color = \"black\";\n    } else {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      document.body.style.color = \"white\";\n    }\n  }\n\n  return (\n    <>\n      <Router>\n        <NavBar title=\"TextUtils\" mode={mode} toggleMode={changeMode} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route path=\"/textutils/about\">\n              <About mode={mode} />\n            </Route>\n            <Route path=\"/textutils\">\n              <TextForm heading=\"Enter Your text below!\" mode={mode} />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}